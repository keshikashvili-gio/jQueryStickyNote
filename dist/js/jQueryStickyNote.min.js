window.note={},+function($){"use strict";note.Note=function(container,data){console.log(data),this.$container=$(container),this.id=data.id,this.width=data.width,this.height=data.height,this.x=data.x,this.y=data.y,this.theme=data.theme,this.text=data.text,this.title=data.title,this.$note=null,this.init()},note.Note.NOTECLASS="sn-box",note.Note.prototype={constructor:note.Note,init:function(){this.createNote()},createNote:function(){return this.$note=$(this.getHtml(this.id,this.theme,this.width,this.height,this.x,this.y,this.text,this.title)),this},getNote:function(){return this.$note},run:function(){this.$container.append(this.getNote())},getHtml:function(id,theme,width,height,x,y,text,title){return'<div id="note-'+id+'" data-id="'+id+'" data-x="'+x+'" data-y="'+y+'" class="'+note.Note.NOTECLASS+" theme-"+theme+'" style="width:'+width+"px;height:"+height+"px;-webkit-transform: translate("+x+"px, "+y+"px);transform: translate("+x+"px, "+y+'px);"><div class="sn-header">'+note.NoteManager.DEFAULTS.noteOptions.buttons[0]+'<span class="sn-title">'+title+"</span>"+note.NoteManager.DEFAULTS.noteOptions.buttons[1]+'</div><div class="sn-body"><textarea class="sn-editor">'+text+"</textarea></div></div>"},htmlToObject:function(html){html=$(html);var theme=this.getHTmlClass(html[0].className,"theme-\\w+");return theme=theme.substr(theme.indexOf("-")+1),{id:html.data("id"),width:html.width(),height:html.height(),x:html.attr("data-x"),y:html.attr("data-y"),text:html.find(".sn-editor").val(),title:html.find(".sn-title").val(),theme:theme}},getHTmlClass:function(str,klass){var r=new RegExp("(?:^| )("+klass+")(?: |$)"),m=(""+str).match(r);return m?m[1]:null}}}(jQuery),window.note=window.note||{},+function(){"use strict";note.DbService=function(){},note.DbService.prototype={constructor:note.DbService,save:function(){console.error("SAVE method must be implemented in your DbService class")},"delete":function(){console.error("DELETE method must be implemented in your DbService class")},deleteAll:function(){console.error("DELETEALL method must be implemented in your DbService class")},update:function(){console.error("UPDATE method must be implemented in your DbService class")},updateAll:function(){console.error("UPDATEALL method must be implemented in your DbService class")},getData:function(){console.error("GETDATA method must be implemented in your DbService class")},lastInsertId:function(){console.error("lastInsertId method must be implemented in your DbService class")}}}(jQuery),window.note=window.note||{},+function($){"use strict";note.DbLocalStorageService=function(options){this.options=options},note.DbLocalStorageService.prototype=Object.create(note.DbService.prototype),note.DbLocalStorageService.prototype.constructor=note.DbLocalStorageService,note.DbLocalStorageService.prototype.save=function(newData){var data=this._getAllFromLocalStorage();newData.id=parseInt(this._getMaxId()+1),data.push(newData),this._saveToLocalStorage(data)},note.DbLocalStorageService.prototype["delete"]=function(id){for(var data=this._getAllFromLocalStorage(),i=0;i<data.length;i++)data[i].id==id&&data.splice(i,1);this._saveToLocalStorage(data)},note.DbLocalStorageService.prototype.deleteAll=function(){},note.DbLocalStorageService.prototype.update=function(updatedData){for(var data=this._getAllFromLocalStorage(),i=0;i<data.length;i++)data[i].id==updatedData.id&&(data[i]=updatedData);console.log(updatedData),this._saveToLocalStorage(data)},note.DbLocalStorageService.prototype.updateAll=function(){},note.DbLocalStorageService.prototype.getData=function(){return this._getAllFromLocalStorage()},note.DbLocalStorageService.prototype.lastInsertId=function(){return this._getMaxId()},note.DbLocalStorageService.prototype._getAllFromLocalStorage=function(){var storage=localStorage.getItem(this.options.localStorageKey);return storage?JSON.parse(storage):[]},note.DbLocalStorageService.prototype._saveToLocalStorage=function(data){localStorage.setItem(this.options.localStorageKey,JSON.stringify(data))},note.DbLocalStorageService.prototype._getItemFromLocalStorage=function(key){return this._getAllFromLocalStorage()[key]},note.DbLocalStorageService.prototype._getMaxId=function(){var max=0;return $.each(this.getData(),function(index,item){item.id>max&&(max=item.id)}),max}}(jQuery),window.note=window.note||{},+function($){"use strict";note.DbBackendService=function(options){this.options=options,console.log(options),this.data={}},note.DbBackendService.prototype=Object.create(note.DbService.prototype),note.DbBackendService.prototype.constructor=note.DbBackendService,note.DbBackendService.prototype.save=function(data){var self=this;this._post(this.options.saveUrl,data).done(function(res){return res.success?void(self.data=res.data):res.errorMsg})},note.DbBackendService.prototype["delete"]=function(id){var self=this;this._post(self.options.deleteUrl,{id:id}).done(function(res){res.success?self.data=res.data:console.log(res.errorMsg)})},note.DbBackendService.prototype.deleteAll=function(){},note.DbBackendService.prototype.update=function(data){var self=this;return this._post(self.options.updateUrl,data)},note.DbBackendService.prototype.updateAll=function(){},note.DbBackendService.prototype.getData=function(){return this._get(this.options.loadUrl)},note.DbBackendService.prototype.lastInsertId=function(){return this.data.id},note.DbBackendService.prototype._get=function(url,data){return $.ajax({url:url,type:"GET",data:data,dataType:"json"})},note.DbBackendService.prototype._post=function(url,data){return $.ajax({url:url,type:"POST",data:data,dataType:"json"})}}(jQuery),window.note=window.note||{},+function(){"use strict";note.ContextMenu=function(menuItems,options){this.menuItems=menuItems,this.option=$.extend({},note.ContextMenu.OPTIONS,options),$("body").append(this.getMenuHtml(this.menuItems)),this.contextMenuClassName="context-menu",this.contextMenuItemClassName="context-menu__item",this.contextMenuLinkClassName="context-menu__link",this.contextMenuActive="context-menu--active",this.taskItemClassName="sn-box",this.taskItemInContext="",this.clickCoords=0,this.clickCoordsX=0,this.clickCoordsY=0,this.menu=document.querySelector("#context-menu"),this.menuItems=this.menu.querySelectorAll(".context-menu__item"),this.menuState=0,this.menuWidth=0,this.menuHeight=0,this.menuPosition=0,this.menuPositionX=0,this.menuPositionY=0,this.windowWidth=0,this.windowHeight=0,this.init()},note.ContextMenu.OPTIONS={itemClickCallback:function(){},menuOwnerActiveClass:"context-menu-open"},note.ContextMenu.prototype={constructor:note.ContextMenu,init:function(){this.contextListener(),this.clickListener(),this.keyupListener(),this.resizeListener()},contextListener:function(){var self=this;document.addEventListener("contextmenu",function(e){self.taskItemInContext=self.clickInsideElement(e,self.taskItemClassName),self.taskItemInContext?(e.preventDefault(),self.toggleMenuOn(),self.positionMenu(e),$(self.taskItemInContext).addClass(self.option.menuOwnerActiveClass),console.log("open")):(self.taskItemInContext=null,self.toggleMenuOff(),console.log("close"))})},clickListener:function(){var self=this;document.addEventListener("click",function(e){var clickElIsLink=self.clickInsideElement(e,self.contextMenuLinkClassName);if(clickElIsLink)e.preventDefault(),self.menuItemListener(e,clickElIsLink);else{var button=e.which||e.button;1===button&&self.toggleMenuOff()}})},keyupListener:function(){var self=this;window.onkeyup=function(e){27===e.keyCode&&self.toggleMenuOff()}},resizeListener:function(){var self=this;window.onresize=function(){self.toggleMenuOff()}},toggleMenuOn:function(){1!==this.menuState&&(this.menuState=1,this.menu.classList.add(this.contextMenuActive))},toggleMenuOff:function(){0!==this.menuState&&(this.menuState=0,this.menu.classList.remove(this.contextMenuActive),$("."+this.option.menuOwnerActiveClass).removeClass(this.option.menuOwnerActiveClass))},positionMenu:function(e){this.clickCoords=this.getPosition(e),this.clickCoordsX=this.clickCoords.x,this.clickCoordsY=this.clickCoords.y,this.menuWidth=this.menu.offsetWidth+4,this.menuHeight=this.menu.offsetHeight+4,this.windowWidth=window.innerWidth,this.windowHeight=window.innerHeight,this.menu.style.left=this.windowWidth-this.clickCoordsX<this.menuWidth?this.windowWidth-this.menuWidth+"px":this.clickCoordsX+"px",this.menu.style.top=this.windowHeight-this.clickCoordsY<this.menuHeight?this.windowHeight-this.menuHeight+"px":this.clickCoordsY+"px"},menuItemListener:function(e,link){if("function"==typeof this.option.itemClickCallback){var menuOwner=$("."+this.option.menuOwnerActiveClass);this.option.itemClickCallback.call(null,e,link,menuOwner)}this.toggleMenuOff()},clickInsideElement:function(e,className){var el=e.srcElement||e.target;if(el.classList.contains(className))return el;for(;el=el.parentNode;)if(el.classList&&el.classList.contains(className))return el;return!1},getPosition:function(e){var posx=0,posy=0;return e||(e=window.event),e.pageX||e.pageY?(posx=e.pageX,posy=e.pageY):(e.clientX||e.clientY)&&(posx=e.clientX+document.body.scrollLeft+document.documentElement.scrollLeft,posy=e.clientY+document.body.scrollTop+document.documentElement.scrollTop),{x:posx,y:posy}},getMenuHtml:function(menuItems){for(var html='<nav id="context-menu" class="context-menu"><ul class="context-menu__items">',i=0;i<menuItems.length;i++)html+='<li class="context-menu__item"><a href="#" class="context-menu__link" data-key="'+menuItems[i].name+'" data-value="'+menuItems[i].value+'"><span style="background-color:'+menuItems[i].value+'"></span>'+menuItems[i].name+"</a></li>";return html+="</ul></nav>"}}}(),window.note=window.note||{},+function($){"use strict";note.NoteManager=function(element,options){this.options=options,this.$element=$(element),this.notes={},this.dbService={},this.eventDelaytimer=0,this.eventDelaytimerMs=300,this.init()},note.NoteManager.prototype={constructor:note.NoteManager,init:function(){console.log("init");var self=this;self.options=$.extend({},note.NoteManager.DEFAULTS,self.options),"localStorageService"===self.options.dbService?self.dbService=new note.DbLocalStorageService(self.options.dbServices.localStorageService.localStorageServiceOptions):"backendService"===self.options.dbService&&(self.dbService=new note.DbBackendService(self.options.dbServices.backendService.backendServiceOptions)),$.when(self.dbService.getData()).done(function(data){data.length?self.notes=data:(self.notes=self.options.plainNoteObject,self.dbService.save(self.notes[0])),$.each(self.notes,function(i,item){self.createNote(item)});new note.ContextMenu(note.NoteManager.THEMES,{itemClickCallback:self.themeChangeClickListener.bind(self)})})},bindEvents:function($element){$element.find(".sn-btn-add-new").off("click").on("click",this.openNewNote.bind(this)),$element.find(".sn-btn-remove").off("click").on("click",this.removeNote.bind(this)),$element.find(".sn-editor").off("click").on("click, mousedown",function(e){e.stopPropagation()}).off("keyup").on("keyup",this.textEditListener.bind(this))},openNewNote:function(){var self=this;$.when(this.dbService.save(this.options.plainNoteObject[0])).done(function(){self.options.plainNoteObject[0].id=self.dbService.lastInsertId(),self.createNote(self.options.plainNoteObject[0])})},createNote:function(object){var Note=new note.Note(this.$element,object);this.bindEvents(Note.$note),this.initDrag(Note.$note,this.$element),Note.run()},updateNote:function(updatedData){this.dbService.update(updatedData)},removeNote:function(event){var conf=confirm("are you sure to remove this note?");if(conf){var noteNode=$(event.target).parents("."+note.Note.NOTECLASS);$(noteNode).remove(),this.dbService["delete"]($(noteNode).data("id"))}},toObject:function(){},initDrag:function(){var self=this;interact("."+note.Note.NOTECLASS).draggable({onmove:self.dragMoveListener.bind(this),inertia:!0,restrict:{restriction:"parent",endOnly:!0,elementRect:{top:0,left:0,bottom:1,right:1}},autoScroll:!0,onend:function(event){event.target.style.zIndex=""}}).resizable({edges:{left:!0,right:!0,bottom:!0,top:!0}}).on("resizemove",self.resizeListener.bind(this))},dragMoveListener:function(event){var self=this,target=event.target,x=(parseFloat(target.getAttribute("data-x"))||0)+event.dx,y=(parseFloat(target.getAttribute("data-y"))||0)+event.dy;console.log("sn-beforeMove"),target.style.zIndex="10000",self.$element.trigger("sn-beforeMove",target,event),target.style.webkitTransform=target.style.transform="translate("+x+"px, "+y+"px)",target.setAttribute("data-x",x),target.setAttribute("data-y",y),this.setEventDelay(function(){console.log("sn-afterMove");var data=note.Note.prototype.htmlToObject(target);self.$element.trigger("sn-afterMove",target,data),self.updateNote(data)},this.eventDelaytimerMs)},resizeListener:function(event){var self=this,target=event.target,x=parseFloat(target.getAttribute("data-x"))||0,y=parseFloat(target.getAttribute("data-y"))||0;console.log("sn-beforeResize"),self.$element.trigger("sn-beforeResize",target,event);var w=event.rect.width,h=event.rect.height;w>self.options.noteOptions.maxWidth&&(w=self.options.noteOptions.maxWidth),w<self.options.noteOptions.minWidth&&(w=self.options.noteOptions.minWidth),h>self.options.noteOptions.maxHeight&&(h=self.options.noteOptions.maxHeight),h<self.options.noteOptions.minHeight&&(h=self.options.noteOptions.minHeight),target.style.width=w+"px",target.style.height=h+"px",x+=event.deltaRect.left,y+=event.deltaRect.top,target.style.webkitTransform=target.style.transform="translate("+x+"px,"+y+"px)",target.setAttribute("data-x",x),target.setAttribute("data-y",y),this.setEventDelay(function(){console.log("sn-afterResize");var data=note.Note.prototype.htmlToObject(target);self.$element.trigger("sn-afterResize",target,data),self.updateNote(data)},this.eventDelaytimerMs)},themeChangeClickListener:function(){var link=(arguments[0],arguments[1]),$note=arguments[2],currentTheme=note.Note.prototype.getHTmlClass($note[0].className,"theme-\\w+");$note.removeClass(currentTheme).addClass("theme-"+$(link).data("key")),this.dbService.update(note.Note.prototype.htmlToObject($note))},textEditListener:function(e){var event=e,self=this;this.setEventDelay(function(){console.log("beforeTextChange");var elem=$(event.target).parents("."+note.Note.NOTECLASS),noteObj=note.Note.prototype.htmlToObject(elem);self.$element.trigger("beforeTextChange",noteObj,elem),self.dbService.update(noteObj),self.$element.trigger("afterTextChanged",noteObj,elem),console.log("afterTextChanged")},500)},setEventDelay:function(callback,ms){clearTimeout(this.eventDelaytimer),this.eventDelaytimer=setTimeout(callback,ms)}},note.NoteManager.THEMES=[{name:"blue",value:"#BFE0F5"},{name:"green",value:"#C2F4BD"},{name:"pink",value:"#F0BFF0"},{name:"purple",value:"#D1C8FE"},{name:"white",value:"#F4F4F4"},{name:"yellow",value:"#FDFBB6"}],note.NoteManager.DEFAULTS={plainNoteObject:[{id:1,width:180,height:166,x:300,y:100,text:"",title:"",theme:"yellow"}],noteOptions:{maxWidth:200,maxHeight:200,minWidth:30,minHeight:30,buttons:['<a href="javascript:" class="sn-btn-add-new">+</a>','<a href="javascript:" class="sn-btn-remove">x</a>']},dbServices:{localStorageService:{localStorageServiceOptions:{localStorageKey:"_jq_sticky_note"}},backendService:{backendServiceOptions:{loadUrl:"",saveUrl:"",updateUrl:"",deleteUrl:"",deleteAllUrl:""}}},dbService:"localStorageService"},jQuery.fn.jQueryStickyNote=function(options){return new note.NoteManager(this,options)}}(jQuery);